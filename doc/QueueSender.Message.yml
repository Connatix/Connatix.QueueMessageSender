### YamlMime:ManagedReference
items:
- uid: QueueSender.Message
  commentId: T:QueueSender.Message
  id: Message
  parent: QueueSender
  children:
  - QueueSender.Message.LastErrorMessage
  - QueueSender.Message.Payload
  - QueueSender.Message.RetryCount
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Message
  fullName: QueueSender.Message
  type: Class
  source:
    remote:
      path: src/QueueSender/QueueMessageSender.cs
      branch: master
      repo: git@github.com:Connatix/QueueMessageSender.git
    id: Message
    path: src/QueueSender/QueueMessageSender.cs
    startLine: 594
  assemblies:
  - QueueSender
  namespace: QueueSender
  summary: "\nThis class encapsulates an enqueued message. It also tracks the retry count and the last error\nof the message handler action.\n"
  example: []
  syntax:
    content: public class Message
    content.vb: Public Class Message
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: QueueSender.Message.RetryCount
  commentId: P:QueueSender.Message.RetryCount
  id: RetryCount
  parent: QueueSender.Message
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: Message.RetryCount
  fullName: QueueSender.Message.RetryCount
  type: Property
  source:
    remote:
      path: src/QueueSender/QueueMessageSender.cs
      branch: master
      repo: git@github.com:Connatix/QueueMessageSender.git
    id: RetryCount
    path: src/QueueSender/QueueMessageSender.cs
    startLine: 596
  assemblies:
  - QueueSender
  namespace: QueueSender
  syntax:
    content: public int RetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RetryCount As Integer
  overload: QueueSender.Message.RetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: QueueSender.Message.Payload
  commentId: P:QueueSender.Message.Payload
  id: Payload
  parent: QueueSender.Message
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Message.Payload
  fullName: QueueSender.Message.Payload
  type: Property
  source:
    remote:
      path: src/QueueSender/QueueMessageSender.cs
      branch: master
      repo: git@github.com:Connatix/QueueMessageSender.git
    id: Payload
    path: src/QueueSender/QueueMessageSender.cs
    startLine: 597
  assemblies:
  - QueueSender
  namespace: QueueSender
  syntax:
    content: public object Payload { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Payload As Object
  overload: QueueSender.Message.Payload*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: QueueSender.Message.LastErrorMessage
  commentId: P:QueueSender.Message.LastErrorMessage
  id: LastErrorMessage
  parent: QueueSender.Message
  langs:
  - csharp
  - vb
  name: LastErrorMessage
  nameWithType: Message.LastErrorMessage
  fullName: QueueSender.Message.LastErrorMessage
  type: Property
  source:
    remote:
      path: src/QueueSender/QueueMessageSender.cs
      branch: master
      repo: git@github.com:Connatix/QueueMessageSender.git
    id: LastErrorMessage
    path: src/QueueSender/QueueMessageSender.cs
    startLine: 598
  assemblies:
  - QueueSender
  namespace: QueueSender
  syntax:
    content: public string LastErrorMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastErrorMessage As String
  overload: QueueSender.Message.LastErrorMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: QueueSender
  commentId: N:QueueSender
  name: QueueSender
  nameWithType: QueueSender
  fullName: QueueSender
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: QueueSender.Message.RetryCount*
  commentId: Overload:QueueSender.Message.RetryCount
  name: RetryCount
  nameWithType: Message.RetryCount
  fullName: QueueSender.Message.RetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: QueueSender.Message.Payload*
  commentId: Overload:QueueSender.Message.Payload
  name: Payload
  nameWithType: Message.Payload
  fullName: QueueSender.Message.Payload
- uid: QueueSender.Message.LastErrorMessage*
  commentId: Overload:QueueSender.Message.LastErrorMessage
  name: LastErrorMessage
  nameWithType: Message.LastErrorMessage
  fullName: QueueSender.Message.LastErrorMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
