### YamlMime:ManagedReference
items:
- uid: QueueMessageSender.ChannelSpecificMessageHandler
  commentId: T:QueueMessageSender.ChannelSpecificMessageHandler
  id: ChannelSpecificMessageHandler
  parent: QueueMessageSender
  children:
  - QueueMessageSender.ChannelSpecificMessageHandler.Action
  - QueueMessageSender.ChannelSpecificMessageHandler.HandleError
  langs:
  - csharp
  - vb
  name: ChannelSpecificMessageHandler
  nameWithType: ChannelSpecificMessageHandler
  fullName: QueueMessageSender.ChannelSpecificMessageHandler
  type: Class
  source:
    remote:
      path: src/QueueMessageSender/MessageHandler.cs
      branch: master
      repo: git@github.com:Connatix/QueueMessageSender.git
    id: ChannelSpecificMessageHandler
    path: src/QueueMessageSender/MessageHandler.cs
    startLine: 24
  assemblies:
  - QueueMessageSender
  namespace: QueueMessageSender
  summary: "\nThis class encapsulates a write stream action for messages. Besides a list of message,\nthe action receives as argument the channel name, thus allowing to differentiate what to do for a specific\nchannel (write to a file, send to AWS, RabbitMQ, etc) \nIt also encapsulates an error handler for the action. The channel is also provided as argument.\n"
  example: []
  syntax:
    content: public class ChannelSpecificMessageHandler
    content.vb: Public Class ChannelSpecificMessageHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: QueueMessageSender.ChannelSpecificMessageHandler.Action
  commentId: P:QueueMessageSender.ChannelSpecificMessageHandler.Action
  id: Action
  parent: QueueMessageSender.ChannelSpecificMessageHandler
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: ChannelSpecificMessageHandler.Action
  fullName: QueueMessageSender.ChannelSpecificMessageHandler.Action
  type: Property
  source:
    remote:
      path: src/QueueMessageSender/MessageHandler.cs
      branch: master
      repo: git@github.com:Connatix/QueueMessageSender.git
    id: Action
    path: src/QueueMessageSender/MessageHandler.cs
    startLine: 26
  assemblies:
  - QueueMessageSender
  namespace: QueueMessageSender
  syntax:
    content: public Func<List<Message>, string, Task> Action { get; set; }
    parameters: []
    return:
      type: System.Func{System.Collections.Generic.List{QueueMessageSender.Message},System.String,System.Threading.Tasks.Task}
    content.vb: Public Property Action As Func(Of List(Of Message), String, Task)
  overload: QueueMessageSender.ChannelSpecificMessageHandler.Action*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: QueueMessageSender.ChannelSpecificMessageHandler.HandleError
  commentId: P:QueueMessageSender.ChannelSpecificMessageHandler.HandleError
  id: HandleError
  parent: QueueMessageSender.ChannelSpecificMessageHandler
  langs:
  - csharp
  - vb
  name: HandleError
  nameWithType: ChannelSpecificMessageHandler.HandleError
  fullName: QueueMessageSender.ChannelSpecificMessageHandler.HandleError
  type: Property
  source:
    remote:
      path: src/QueueMessageSender/MessageHandler.cs
      branch: master
      repo: git@github.com:Connatix/QueueMessageSender.git
    id: HandleError
    path: src/QueueMessageSender/MessageHandler.cs
    startLine: 28
  assemblies:
  - QueueMessageSender
  namespace: QueueMessageSender
  syntax:
    content: public Func<List<Message>, string, Task> HandleError { get; set; }
    parameters: []
    return:
      type: System.Func{System.Collections.Generic.List{QueueMessageSender.Message},System.String,System.Threading.Tasks.Task}
    content.vb: Public Property HandleError As Func(Of List(Of Message), String, Task)
  overload: QueueMessageSender.ChannelSpecificMessageHandler.HandleError*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: QueueMessageSender
  commentId: N:QueueMessageSender
  name: QueueMessageSender
  nameWithType: QueueMessageSender
  fullName: QueueMessageSender
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: QueueMessageSender.ChannelSpecificMessageHandler.Action*
  commentId: Overload:QueueMessageSender.ChannelSpecificMessageHandler.Action
  name: Action
  nameWithType: ChannelSpecificMessageHandler.Action
  fullName: QueueMessageSender.ChannelSpecificMessageHandler.Action
- uid: System.Func{System.Collections.Generic.List{QueueMessageSender.Message},System.String,System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Collections.Generic.List{QueueMessageSender.Message},System.String,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<List<Message>, String, Task>
  nameWithType: Func<List<Message>, String, Task>
  fullName: System.Func<System.Collections.Generic.List<QueueMessageSender.Message>, System.String, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of List(Of Message), String, Task)
  fullName.vb: System.Func(Of System.Collections.Generic.List(Of QueueMessageSender.Message), System.String, System.Threading.Tasks.Task)
  name.vb: Func(Of List(Of Message), String, Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: QueueMessageSender.Message
    name: Message
    nameWithType: Message
    fullName: QueueMessageSender.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: QueueMessageSender.Message
    name: Message
    nameWithType: Message
    fullName: QueueMessageSender.Message
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: QueueMessageSender.ChannelSpecificMessageHandler.HandleError*
  commentId: Overload:QueueMessageSender.ChannelSpecificMessageHandler.HandleError
  name: HandleError
  nameWithType: ChannelSpecificMessageHandler.HandleError
  fullName: QueueMessageSender.ChannelSpecificMessageHandler.HandleError
